<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <context:component-scan base-package="com.Nie.dao"></context:component-scan>
    <!--1.关联数据库配置文件-->
    <context:property-placeholder location="classpath*:*.properties" />
<!--    <context:property-placeholder location="classpath:db.properties"/>-->

    <!--2.连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <!--注意如果用username的话可能存在重名问题-->
        <property name="password" value="${jdbc.password}"/>

        <property name="initialPoolSize" value="3"/>
        <property name="maxIdleTime" value="30"/>
        <property name="maxPoolSize" value="15"/>
        <property name="minPoolSize" value="3"/>
    </bean>

    <!--3.sqlsessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--        <property name="mapperLocations" value="classpath:com/Nie/dao/BookMapper.xml"/>-->
    </bean>

    <!--4.注入SqlSessionTemplate类，之后所有的操作从SqlSessionTemplate展开-->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
        <constructor-arg index="0" ref="sessionFactory"/>
    </bean>

    <!--5.注入SqlSessionTemplate类的话，会额外引入一个Dao层接口实现类-->
    <bean class="com.Nie.dao.BookMapperImpl" id="bookMapperImpl">
        <property name="sqlSession" ref="sqlSession"/>
    </bean>


    <!--3.声明式事务配置-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--4.AOP事务织入-->
    <!--配置事务通知：-->
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
        <!--给哪些方法配置事务-->
        <!--配置事务的传播性 propagation -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!--5.配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.Nie.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

</beans>